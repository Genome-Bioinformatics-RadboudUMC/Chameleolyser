####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################
########## 	  	 		   						     	 	 					       	  				  ########## 
########## 	  	 		   					   		  CHAMELEOLYSER  	 	 				  	 		  ##########
########## 	  	 		   						     	 	 					       	  				  ##########
####################################################################################################################
####################################################################################################################
####################################################################################################################
####################################################################################################################

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     	  	  		  	Read Config File  	  		   			   	   #######
##################################################################################################
##################################################################################################
##################################################################################################

my $ConfigFile;
my $ConfigRef;
my %Config;

BEGIN {

	use Config::General;
	use Data::Dumper;
	
	$ConfigFile = "";
	
	for (my $I = 0; $I < scalar @ARGV; $I++){
	
		if ($ARGV[$I] =~ "--ConfigFile"){
		
			$ConfigFile = $ARGV[$I+1];
			last;
		}
	}
	
	$ConfigRef 	= Config::General->new($ConfigFile);
	%Config 	= $ConfigRef->getall;
}

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     			      	Load Libraries   	  		   	 			   #######
##################################################################################################
##################################################################################################
##################################################################################################

use Getopt::Long;
use IO::Zlib;
use strict;
use warnings;
use Data::Dumper;

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     		 	  	  Initialize & Declare  	  		   			   #######
##################################################################################################
##################################################################################################
##################################################################################################

######################################################
### 				PROGRAM SETTINGS		   	   ###
######################################################

my 	$MAIN_DIR										= "";

######################################################
### 				PROGRAM OPTIONS		   	   	   ###
######################################################

my 	$MaskReferenceSequence							= 0;

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     		  	   	  	 Get Options  	  		   			  	       #######
##################################################################################################
##################################################################################################
##################################################################################################

GetOptions ("MAIN_DIR"							=>	\$MAIN_DIR)

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     		  	  	  	 MAIN PROGRAM  	  		   				   	   #######
##################################################################################################
##################################################################################################
##################################################################################################

MaskReferenceGenome 						($MAIN_DIR) 						if $MaskReferenceGenome;

##################################################################################################
##################################################################################################
##################################################################################################
#######     		     			   	   	  SUBROUTINES  	  		   				 	   #######
##################################################################################################
##################################################################################################
##################################################################################################

sub MaskReferenceGenome {
	
	(my $MAIN_DIR)
	= @_;
	
	# test if working directory exists
	
	if (! -d $MAIN_DIR){
		print "$MAIN_DIR should already exist.\n";
		print "Please enter an existing working directory.\n";
	}
	
	# make new subdirs
	
	unless(-d "$MAIN_DIR/REF/"){system("mkdir $MAIN_DIR/REF/");}
	unless(-d "$MAIN_DIR/BED/"){system("mkdir $MAIN_DIR/BED/");}
	
	# download BED #
	
	chdir	("$MAIN_DIR/BED/");
	system	("wget https://github.com/Genome-Bioinformatics-RadboudUMC/ChameleolyserBEDs/blob/main/All.formasking.bed");
	
	# download RefSeq #
	
	chdir	("$MAIN_DIR/REF/");
	system	("wget http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.gz");
	system 	("gunzip human_g1k_v37.fasta.gz");
	system 	("bedtools maskfasta -fi human_g1k_v37.fasta -bed ../BED/All.formasking.bed -fo human_g1k_v37.masked.fasta");
	system 	("bwa index human_g1k_v37.masked.fasta");
	system 	("samtools faidx human_g1k_v37.masked.fasta");
	system 	("picard CreateSequenceDictionary REFERENCE=human_g1k_v37.masked.fasta OUTPUT=human_g1k_v37.masked.dict");
	
	print "Masking Ready!\n";

}